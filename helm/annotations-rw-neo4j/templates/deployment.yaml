apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.service.name }} 
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}" 
    visualize: "true" 
    app: {{ .Values.service.name }} 
spec:
  replicas: {{ .Values.replicaCount }} 
  selector: 
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        visualize: "true" 
    spec:
      containers: 
      - name: {{ .Values.service.name }} 
        image: "{{ .Values.image.repository }}:{{ .Chart.Version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env: 
        - name: APP_PORT 
          value: "8080" 
        - name: NEO_URL 
          valueFrom: 
            configMapKeyRef: 
              name: global-config 
              key: neo4j.read.write.url 
        - name: BATCH_SIZE 
          valueFrom: 
            configMapKeyRef: 
              name: global-config 
              key: neo4j.statements.batch.size 
        - name: GRAPHITE_ADDRESS 
          valueFrom: 
            configMapKeyRef: 
              name: global-config 
              key: graphite.address
        - name: LOG_METRICS 
          value: "false"
        - name: ANNOTATION_LIFECYCLE 
          value: {{ .Values.env.ANNOTATION_LIFECYCLE}}
        - name: PLATFORM_VERSION 
          value: {{ .Values.env.PLATFORM_VERSION}}
        - name: GRAPHITE_PREFIX 
          value: {{ .Values.env.GRAPHITE_PREFIX}}
        ports: 
        - containerPort: 8080 
        livenessProbe: 
          tcpSocket: 
            port: 8080 
          initialDelaySeconds: 10
        readinessProbe: 
          httpGet: 
            path: "/__gtg" 
            port: 8080 
          initialDelaySeconds: 5
          periodSeconds: 30
        resources: 
{{ toYaml .Values.resources | indent 12 }}

