apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.service.name }} 
  labels:
    chart: "{{ .Chart.Name | trunc 63 }}"
    chartVersion: "{{ .Chart.Version | trunc 63 }}" 
    visualize: "true" 
    app: {{ .Values.service.name }} 
spec:
  replicas: {{ .Values.replicaCount }} 
  selector: 
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        visualize: "true" 
    spec:
      containers: 
      - name: {{ .Values.service.name }} 
        image: "{{ .Values.image.repository }}:{{ .Chart.Version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env: 
        - name: APP_PORT 
          value: "8080" 
        - name: NEO_URL 
          valueFrom: 
            configMapKeyRef: 
              name: global-config 
              key: neo4j.read.write.url
        - name: BATCH_SIZE 
          valueFrom: 
            configMapKeyRef: 
              name: global-config 
              key: neo4j.statements.batch.size
        - name: ZOOKEEPER_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: zookeeper.url
        - name: SHOULD_CONSUME_MESSAGES
          value: "{{ .Values.env.SHOULD_CONSUME_MESSAGES }}"
        - name: SHOULD_FORWARD_MESSAGES
          value: "{{ .Values.env.SHOULD_FORWARD_MESSAGES }}"
        - name: CONSUMER_GROUP
          value: {{ .Values.env.CONSUMER_GROUP }}
        - name: CONSUMER_TOPIC
          value: {{ .Values.env.CONSUMER_TOPIC }}
        - name: PRODUCER_TOPIC
          value: {{ .Values.env.PRODUCER_TOPIC }}
        - name: BROKER_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: kafka.proxy.url
        - name: LIFECYCLE_CONFIG_PATH
          value: {{ .Values.env.LIFECYCLE_CONFIG_PATH }}
        - name: GRAPHITE_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: graphite.address
        - name: GRAPHITE_PREFIX
          value: 'coco.services.{{required "The target_env value is required for this app. Use helm upgrade ... --set target_env=... when installing." .Values.target_env}}.{{ .Values.service.name }}'
        - name: LOG_METRICS
          value: "{{ .Values.env.LOG_METRICS }}"
        ports: 
        - containerPort: 8080 
        livenessProbe: 
          tcpSocket: 
            port: 8080 
          initialDelaySeconds: 10
        readinessProbe: 
          httpGet: 
            path: "/__gtg" 
            port: 8080 
          initialDelaySeconds: 5
          periodSeconds: 30
        resources: 
{{ toYaml .Values.resources | indent 12 }}

